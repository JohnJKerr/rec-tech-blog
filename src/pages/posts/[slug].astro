---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/container.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <Container>
    <div class="mt-14 rounded-t-xl shadow-xl bg-blue-50 px-8 py-12">
      <span class="text-blue-400 uppercase tracking-wider text-sm font-medium">
        {entry.data.category}
      </span>
      <h1
        class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight">
        {entry.data.title}
      </h1>
      <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap">
        <span class="text-gray-400">
          {entry.data.author}
        </span>
        <span class="text-gray-400">•</span>
        <time
          class="text-gray-400"
          datetime={entry.data.publishDate.toISOString()}>
          {entry.data.publishDate.toDateString()}
        </time>
        <span class="text-gray-400 hidden md:block">•</span>
        <div class="w-full md:w-auto flex flex-wrap gap-3">
          {
            entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>
    </div>
    <div class="bg-white shadow-xl rounded-b-xl py-12">
      <div class="mx-8 prose prose-lg max-w-full">
        <Content />
      </div>
    </div>
    <div
      class="p-9 mt-8 rounded-xl bg-gradient-to-r from-blue-700 via-blue-800 to-purple-800 text-center text-white">
      <h1 class="text-4xl font-bold lg:tracking-tight lg:leading-tight">
        Skip the Integration Nightmare?
      </h1>
      <div class="max-w-3/4 mx-auto mt-4">
        <aside class="text-xl">
          We're looking to build the solution that handles all of the headaches.
          All your Rec-Tech APIs with consistent modelling, state-change
          detection, and events.
        </aside>
        <div class="bg-white/25 rounded-md mt-6 p-4">
          <h2 class="text-2xl font-bold text-center mb-8">What you get:</h2>
          <ul
            class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-3xl mx-auto list-none">
            <li class="flex items-center space-x-3">
              <svg
                class="w-6 h-6 text-green-400 flex-shrink-0"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"></path>
              </svg>
              <span class="text-lg font-medium"
                >Help us choose our first Rec-Tech APIs</span
              >
            </li>

            <li class="flex items-center space-x-3">
              <svg
                class="w-6 h-6 text-green-400 flex-shrink-0"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"></path>
              </svg>
              <span class="text-lg font-medium"
                >Data modelled around your needs</span
              >
            </li>

            <li class="flex items-center space-x-3">
              <svg
                class="w-6 h-6 text-green-400 flex-shrink-0"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"></path>
              </svg>
              <span class="text-lg font-medium"
                >Your features as a priority</span
              >
            </li>

            <li class="flex items-center space-x-3">
              <svg
                class="w-6 h-6 text-green-400 flex-shrink-0"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"></path>
              </svg>
              <span class="text-lg font-medium"
                >Grandfather pricing, forever</span
              >
            </li>
          </ul>
        </div>
        <form class="mt-6" method="post" id="wishlist-form">
          <input
            name="email"
            type="email"
            placeholder="Enter your email"
            class="bg-white rounded-md p-3 text-slate-900"
            required
          />
          <button
            type="submit"
            class="bg-white rounded-md p-3 text-purple-800 mx-4 px-8"
            >Join Waitlist</button
          >
        </form>
        <script>
          const form = document.getElementById(
            "wishlist-form"
          ) as HTMLFormElement;
          if (form) {
            form.onsubmit = (e) => {
              e.preventDefault();
              var formData = new FormData(form);
              fetch("https://wishlists.developkerr.com/wishlists", {
                method: "POST",
                body: JSON.stringify(formData.get("email")),
              });
            };
          }
        </script>
      </div>
    </div>

    <hr class="mt-8 border-b-slate-500" />

    <a href="/posts" class="mt-8 block">← Back to all posts</a>
  </Container>
</Layout>
